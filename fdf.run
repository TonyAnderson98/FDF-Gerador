#!/bin/bash
export LC_NUMERIC="en_US.UTF-8"
dir=`pwd`



QUIET=0
VERBOSE=0
KEEP_TEMP=0



# =================================================================================
#						Ajuda
# =================================================================================
VERSAO="FDF gerador - Versão 1.0"

OPCAO_INVALIDA="Opção inválida. Por favor use $0 -h ou $0 --help para ajuda."

MENSAGEM_AJUDA="
Uso: $0 [-h]

Para o correto funcionamento do fdf.run, você precisa 
de um arquivo.fdf qualquer (para servir de modelo) e  
do seu arquivo.xyz com as coordenadas atômicas.

Opções de ajuda:
    -h, --help                  Exibe todas as opções de ajuda
    -v, --version               Exibe a versão do programa e sai
    -V, --verbose               Mostra informações adicionais na saída
    -q, --quiet                 Não mostra nada na saída, é uma excecução quieta
    -k, --keep-temp             Mantém arquivo temporários gerados durante a execução do programa (arquivos ocultos)

Relate bugs para anderson.tony@discente.ufma.br"

# Verificação de argumentos passados na excecução do programa

case "$1" in
    -h | --help)
        echo "$MENSAGEM_AJUDA"
        exit 0
        ;;
    -v | --version)
        echo "$VERSAO"
        exit 0
        ;;
    -V | --verbose)
        VERBOSE=1
        ;;
    -q | --quiet)
        QUIET=1
        ;;
    -k | --keep-temp)
        KEEP_TEMP=1
        ;;
    *)
        if test -n "$1"; then
            echo "$OPCAO_INVALIDA"
            exit 1
        fi
esac

# =================================================================================



# =================================================================================
#						Encontrar o nome dos arquivos .fdf e .xyz
# =================================================================================
#	Objetivo:			 -	Encontrar e armazenar em variáveis o nome dos
#                               arquivos .fdf e .xyz dentro da pasta
#	Variavel
#		nome_arquivo_fdf -	Variável que armazena o nome do arquivo fdf
#		nome_arquivo_xyz -	Variável que armazena o nome do arquivo xyz
#
nome_arquivo_fdf=`ls *.fdf` 
nome_arquivo_xyz=`ls *.xyz`

# Log terminal: Exibir (se necessário) nomes dos arquivos fdf e xyz
if test "$QUIET" = 0; then
    echo "Arquivo fdf: $nome_arquivo_fdf"  # Log terminal
    echo "Arquivo xyz: $nome_arquivo_xyz"  # Log terminal
fi


# =================================================================================
#						ChemicalSpeciesLabel
# =================================================================================
#	Objetivo:			-	Identificar a PRIMEIRA e ÚLTIMA linha do "ChemicalSpeciesLabel"
#	Variavel
#		numero_linha	-	Variável de loop para armazenar o número da linha que
#                               está sendo lida no momento
#       linha           -   O que está sendo lido linha a linha
#
numero_linha=1      # Número da linha começa com 1

while IFS= read -r linha; do
    if [[ $linha == "%block ChemicalSpeciesLabel" ]]; then      # Verificando se a linha atual é o INÍCIO do ChemicalSpeciesLabel
        let linha_inicial=numero_linha 
        break
    fi

    let numero_linha=numero_linha+1
done < $nome_arquivo_fdf


numero_linha=1
while IFS= read -r linha; do

    if [[ $linha == "%endblock ChemicalSpeciesLabel" ]]; then   # Verificando se a linha atual é o FIM do ChemicalSpeciesLabel
        let linha_final=numero_linha
        break
    fi

    let numero_linha=numero_linha+1
done < $nome_arquivo_fdf




# Escrevendo a Matriz ChemicalSpeciesLabel
awk -v s="$linha_inicial" -v e="$linha_final" 'NR>s&&NR<e' $nome_arquivo_fdf > ChemicalSpeciesLabel.txt




# =================================================================================
#						Extrair simbolos do ChemicalSpeciesLabel
# =================================================================================
#	Objetivo:			-	Extrair somente os símbolos do ChemicalSpeciesLabel
#   Antes:              -   C_lda, B_lda, N_lda
#   Depois:             -   C, B, N

while IFS=" " read -r ignorar ignorar simbolo

    do echo $simbolo | cut -d"_" -f1

done < ChemicalSpeciesLabel.txt > ChemicalSpeciesLabel_cortado.txt





# =================================================================================
#						AtomicCoordinatesAndAtomicSpecies
# =================================================================================
#	Objetivo:			-	Identificar a PRIMEIRA e ÚLTIMA linha do "AtomicCoordinatesAndAtomicSpecies"
#	Variavel
#		numero_linha	-	Variável de loop para armazenar o número da linha que
#                               está sendo lida no momento
#       linha           -   O que está sendo lido linha a linha
#
numero_linha=1      # Número da linha começa com 1

while IFS= read -r linha; do
    if [[ $linha == "%block AtomicCoordinatesAndAtomicSpecies" ]]; then      # Verificando se a linha atual é o INÍCIO do ChemicalSpeciesLabel
        let linha_inicial_atomic_coordinates=numero_linha+1 
        break
    fi

    let numero_linha=numero_linha+1
done < $nome_arquivo_fdf


numero_linha=1
while IFS= read -r linha; do

    if [[ $linha == "%endblock AtomicCoordinatesAndAtomicSpecies" ]]; then   # Verificando se a linha atual é o FIM do ChemicalSpeciesLabel
        let linha_final_atomic_coordinates=numero_linha-1
        break
    fi

    let numero_linha=numero_linha+1
done < $nome_arquivo_fdf


# TODO: Melhorar esse loop, colocando as duas condições IF mesmo loop 

# Escrevendo as coordenadas XYZ no arquivo Matriz AtomicCoordinatesAndAtomicSpecies
awk -v s="2" -v e="500" 'NR>s&&NR<e' $nome_arquivo_xyz > AtomicCoordinatesAndAtomicSpecies.txt