#!/bin/bash
export LC_NUMERIC="en_US.UTF-8"
dir=`pwd`

# Flags
QUIET=0
VERBOSE=0
KEEP_TEMP=0


# =================================================================================
#						Ajuda
# =================================================================================
VERSAO="FDF gerador - Versão1.0"

OPCAO_INVALIDA="Opção inválida. Por favor use $0 -h ou $0 --help para ajuda."

MENSAGEM_AJUDA="
Uso: $0 [-h]

Para o correto funcionamento do fdf.run, você precisa 
de um arquivo.fdf qualquer (para servir de modelo) e  
do seu arquivo.xyz com as coordenadas atômicas.

Opções de ajuda:
    -h, --help                  Exibe todas as opções de ajuda
    -v, --version               Exibe a versão do programa e sai
    -V, --verbose               Mostra informações adicionais na saída
    -q, --quiet                 Não mostra nada na saída, é uma excecução quieta

Relate bugs para anderson.tony@discente.ufma.br"

# Verificação de argumentos passados na excecução do programa

case "$1" in
    -h | --help)
        echo "$MENSAGEM_AJUDA"
        exit 0
        ;;
    -v | --version)
        echo "$VERSAO"
        exit 0
        ;;
    -V | --verbose)
        VERBOSE=1
        ;;
    -q | --quiet)
        QUIET=1
        ;;
    -k | --keep-temp)
        KEEP_TEMP=1
        ;;
    *)
        if test -n "$1"; then
            echo "$OPCAO_INVALIDA"
            exit 1
        fi
esac

# =================================================================================





# =================================================================================
#						Encontrar o nome dos arquivos .fdf e .xyz
# =================================================================================
#	Objetivo:			 -	Encontrar e armazenar em variáveis o nome dos
#                               arquivos .fdf e .xyz dentro da pasta
#	Variavel
#		nome_arquivo_fdf -	Variável que armazena o nome do arquivo fdf
#		nome_arquivo_xyz -	Variável que armazena o nome do arquivo xyz
#
nome_arquivo_fdf=`ls *.fdf` 
nome_arquivo_xyz=`ls *.xyz`



# Log terminal: Exibir (se necessário) nomes dos arquivos fdf e xyz
if test "$QUIET" = 0; then
    echo "Arquivo fdf: $nome_arquivo_fdf"  # Log terminal
    echo "Arquivo xyz: $nome_arquivo_xyz"  # Log terminal
fi



# =================================================================================
#						ChemicalSpeciesLabel
# =================================================================================
#	Objetivo:			-	Identificar a PRIMEIRA e ÚLTIMA linha do "ChemicalSpeciesLabel"
#	Variavel
#		numero_linha	-	Variável de loop para armazenar o número da linha que
#                               está sendo lida no momento
#       linha           -   O que está sendo lido linha a linha
#
numero_linha=1      # Número da linha começa com 1

while IFS= read -r linha; do
    if [[ $linha == "%block ChemicalSpeciesLabel" ]]; then      # Verificando se a linha atual é o INÍCIO do ChemicalSpeciesLabel
        let linha_inicial=numero_linha 
        break
    fi

    let numero_linha=numero_linha+1
done < $nome_arquivo_fdf


numero_linha=1
while IFS= read -r linha; do

    if [[ $linha == "%endblock ChemicalSpeciesLabel" ]]; then   # Verificando se a linha atual é o FIM do ChemicalSpeciesLabel
        let linha_final=numero_linha
        break
    fi

    let numero_linha=numero_linha+1
done < $nome_arquivo_fdf




# Escrevendo a Matriz ChemicalSpeciesLabel
awk -v s="$linha_inicial" -v e="$linha_final" 'NR>s&&NR<e' $nome_arquivo_fdf > ChemicalSpeciesLabel.txt




# =================================================================================
#						Extrair simbolos do ChemicalSpeciesLabel
# =================================================================================
#	Objetivo:			-	Extrair somente os símbolos do ChemicalSpeciesLabel
#   Antes:              -   C_lda, B_lda, N_lda
#   Depois:             -   C, B, N

while IFS=" " read -r ignorar ignorar simbolo

    do echo $simbolo | cut -d"_" -f1

done < ChemicalSpeciesLabel.txt > ChemicalSpeciesLabel_cortado.txt





# =================================================================================
#						AtomicCoordinatesAndAtomicSpecies
# =================================================================================
#	Objetivo:			-	Identificar a PRIMEIRA e ÚLTIMA linha do "AtomicCoordinatesAndAtomicSpecies"
#	Variavel
#		numero_linha	-	Variável de loop para armazenar o número da linha que
#                               está sendo lida no momento
#       linha           -   O que está sendo lido linha a linha
#
numero_linha=1      # Número da linha começa com 1

while IFS= read -r linha; do
    if [[ $linha == "%block AtomicCoordinatesAndAtomicSpecies" ]]; then      # Verificando se a linha atual é o INÍCIO do ChemicalSpeciesLabel
        let linha_inicial_atomic_coordinates=numero_linha+1 
        break
    fi

    let numero_linha=numero_linha+1
done < $nome_arquivo_fdf


numero_linha=1
while IFS= read -r linha; do

    if [[ $linha == "%endblock AtomicCoordinatesAndAtomicSpecies" ]]; then   # Verificando se a linha atual é o FIM do ChemicalSpeciesLabel
        let linha_final_atomic_coordinates=numero_linha-1
        break
    fi

    let numero_linha=numero_linha+1
done < $nome_arquivo_fdf


# TODO: Melhorar esse loop, colocando as duas condições IF mesmo loop 

# Escrevendo as coordenadas XYZ no arquivo Matriz AtomicCoordinatesAndAtomicSpecies
awk -v s="2" -v e="500" 'NR>s&&NR<e' $nome_arquivo_xyz > AtomicCoordinatesAndAtomicSpecies.txt



# =================================================================================
#						Gerar cópia FDF
# =================================================================================
#	Objetivo:			-	Gerar uma cópia do arquivo.fdf para arquivo_novo.fdf

cp *.fdf final_${nome_arquivo_fdf}



# =================================================================================
#							VERIFICANDO SE .copiador.f90 EXISTE
# =================================================================================
#	Objetivo:			-	Verificar se o arquivo .copiador.f90 existe
if [ ! -f .copiador.f90 ]; then			# Se .copiador.f90 não existe, crie
	# Log terminal: Mostrar (se necessário) se estamos criando o arquivo fortran
    test "$QUIET" = 0 && echo "Criando arquivo Fortran"   
	cat << EOF > .copiador.f90
        PROGRAM Copiador
            IMPLICIT NONE

            ! ----------------------------------------------
            !   Vetores com os simbolos e coordenadas    
            ! ----------------------------------------------
                CHARACTER(len=2), DIMENSION(140) :: simbolos
                CHARACTER(len=2), DIMENSION(140) :: simbolos_cortados
                REAL, DIMENSION(140) :: x
                REAL, DIMENSION(140) :: y
                REAL, DIMENSION(140) :: z
            ! ----------------------------------------------

            ! ----------------------------------------------
            !   Variáveis para loops
            ! ----------------------------------------------
                INTEGER :: i
            ! ----------------------------------------------

                ! ----------------------------------------------
                !           UNIDADES DE ARQUIVOS ABERTOS
                ! ----------------------------------------------
                !   5 - ChemicalSpeciesLabel_cortado.txt
                !  10 - AtomicCoordinatesAndAtomicSpecies.txt
                !  12 - AtomicCoordinatesAndAtomicSpecies_trocado.txt
                !  
                ! ----------------------------------------------

                ! Abrindo arquivo ChemicalSpeciesLabel
                OPEN(UNIT=5, FILE='ChemicalSpeciesLabel_cortado.txt', status='OLD')

                    DO i=1, 6

                        READ(5,*) simbolos_cortados(i)

                    END DO

                CLOSE(5)    ! Fechando ChemicalSpeciesLabel_cortado.txt

                ! Abrindo 
                OPEN(UNIT=10, FILE='AtomicCoordinatesAndAtomicSpecies.txt', status='OLD')
                OPEN(UNIT=12, FILE='AtomicCoordinatesAndAtomicSpecies_trocado.txt', ACTION='WRITE')

                    DO i=1, 140

                        READ(10,*) simbolos(i), x(i), y(i), z(i)    ! Lendo coordenadas linha a linha de [ 10 ]
                        WRITE(12,100) x(i), y(i), z(i), simbolos(i) ! Gravando matriz com coluna trocada em arquivo texto em [ 12 ]
                            100 FORMAT (3F17.6  A10)              
                    END DO

                CLOSE(10)   ! fechando AtomicCoordinatesAndAtomicSpecies
                CLOSE(12)   ! fechando AtomicCoordinatesAndAtomicSpecies_trocado


            END PROGRAM Copiador
EOF
else
    # Log terminal: Mostrar (se necessário) se o arquivo .f90 já existe
    test "$QUIET=0" && echo ".copiador.f90 já existe"
fi



# =================================================================================
#						Gerar cópia FDF
# =================================================================================
#	Objetivo:			-	Compilar e excecutar o programa FORTRAN compilado anteriormente

gfortran .copiador.f90 -o .copiador
./.copiador



# =================================================================================
#						Gerar cópia FDF
# =================================================================================
#   Objetivo            -   Trocar simbolo atômico por seu números crescentes
#   Variável
#       simbolo         -   Simbolo químico a ser # TODO: continuar aqui e em baixo
#       numero          -   Número a ser
#       Antes       Depois
#         C           1
#         B           2
#         N           3
#    
numero=1
while read simbolo
    do

        sed -i "s/\b$simbolo\b/$numero/g" AtomicCoordinatesAndAtomicSpecies_trocado.txt

        let numero=numero+1

    done < ChemicalSpeciesLabel_cortado.txt





# =================================================================================
#						Remover Coordednadas Originais do FDF
# =================================================================================
#	Objetivo:			-	Remover as coordenadas originais do arquivo modelo do fdf
#                               (vamos apagar para colocar as coordenadas do arquivo xyz)
#
sed -i "${linha_inicial_atomic_coordinates},${linha_final_atomic_coordinates}d" final_$nome_arquivo_fdf





# Agora que os dados originais das coordenadas foram apagados, vou reescrever com os dados já processados
let linha_inicial_atomic_coordinates_menos_um=linha_inicial_atomic_coordinates-1
while IFS=" " read -r x y z numero

    do sed -i "${linha_inicial_atomic_coordinates_menos_um}a\ $(printf "%14.6f" $x) $(printf "%14.6f" $y) $(printf "%14.6f" $z) $(printf "%7d" $numero)" final_tBN80.fdf
    printf "$xf"

done < AtomicCoordinatesAndAtomicSpecies_trocado.txt 





# =================================================================================
#						Remover arquivos temporários
# =================================================================================
#	Objetivo:			-	Remover arquivos temporários 
#
rm AtomicCoordinatesAndAtomicSpecies.txt
rm AtomicCoordinatesAndAtomicSpecies_trocado.txt
rm ChemicalSpeciesLabel.txt
rm ChemicalSpeciesLabel_cortado.txt
rm .copiador
rm .copiador.f90
rm final_tBN80.fdf

echo 
echo "--------------------------------------------"             # Log terminal
echo " final_${nome_arquivo_fdf} gerado, por favor o revise"    # Log terminal
echo "--------------------------------------------"             # Log terminal